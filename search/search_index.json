{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc69\u200d\ud83d\udcbb\ud83d\udc9e Code Without Barriers","text":"<p>Welcome to your sweet journey into AI-assisted coding with Michelle Sandford from Microsoft in collaboration with Code Without Barriers!</p> <p>This workshop is all about using GitHub Copilot as your coach, teacher, and pair programmer\u2014not your replacement.</p> <p>Let\u2019s bake some code together! \ud83e\uddc1\ud83d\udcbb</p> <p>Video created with sora in Azure AI Foundry Video Playground</p>"},{"location":"copilot-enabler/","title":"\ud83d\ude80 Copilot as an Enabler","text":"<p>Welcome to the final frosting layer of your Code without Barriers journey! \ud83e\uddc1  </p> <p>In this section, we\u2019ll explore how GitHub Copilot can enable you to write cleaner, smarter, and more maintainable code\u2014without taking over the kitchen.</p>"},{"location":"copilot-enabler/#what-does-enabler-mean","title":"\ud83c\udf1f\u2728 What does \u201cEnabler\u201d mean?","text":"<p>An enabler helps you do more with what you already know. Copilot can: - \u2728Refactor messy code - \ud83e\udde0Suggest improvements - \ud83e\uddeeWrite tests - \ud83d\udc95Add helpful comments - \ud83d\udca1Help you debug</p> <p>But remember: you\u2019re still the baker. Copilot just hands you better tools.</p>"},{"location":"copilot-enabler/#refactoring-with-copilot","title":"\ud83d\udcbb Refactoring with Copilot","text":"<p>Let\u2019s say you\u2019ve written a function that works, but it\u2019s a bit messy:</p> <pre><code>function bakeCupcakes(flavor, quantity) {\n  if (quantity &gt; 0) {\n    console.log(\"Baking \" + quantity + \" \" + flavor + \" cupcakes\");\n  } else {\n    console.log(\"No cupcakes to bake\");\n  }\n}\n</code></pre> <p>Now prompt Copilot:</p> <pre><code>// Refactor this function to use template literals and handle edge cases\n</code></pre> <p>Copilot might suggest:</p> <pre><code>function bakeCupcakes(flavor, quantity) {\n  if (quantity &gt; 0) {\n    console.log(`Baking ${quantity} ${flavor} cupcakes`);\n  } else {\n    console.log(\"Please enter a valid quantity of cupcakes to bake.\");\n  }\n}\n</code></pre> <p>You\u2019ve just leveled up your code with Copilot\u2019s help!</p>"},{"location":"copilot-enabler/#writing-tests-with-copilot","title":"\ud83c\udf69 Writing Tests with Copilot","text":"<p>Testing is a skill many coders avoid\u2014but Copilot makes it easier.</p>"},{"location":"copilot-enabler/#example","title":"Example:","text":"<pre><code>// Write a test for the bakeCupcakes function\n</code></pre> <p>Copilot might generate:</p> <pre><code>test('bakeCupcakes logs correct message', () =&gt; {\n  console.log = jest.fn();\n  bakeCupcakes('Vanilla', 3);\n  expect(console.log).toHaveBeenCalledWith('Baking 3 Vanilla cupcakes');\n});\n</code></pre> <p>Now I don't want it to write tests for me, I want it to teach me how to write tests - so I might say: </p> <p>\"Could you explain this test to me like I'm 5 years old?\"</p> <p>GitHub Copilot replies:</p> <p>**Absolutely! Let me explain this test using a fun cupcake analogy! \ud83e\uddc1</p> <p>Imagine you're playing \"Pretend Bakery\" with your toys! \ud83c\udfae</p> <p>First, we tell our pretend friend (Jest) that they're going to play the role of the \"message announcer\" (console.log = jest.fn()). It's like giving them a toy microphone! \ud83c\udfa4</p> <p>Then, we ask our baker (bakeCupcakes) to make 3 vanilla cupcakes (bakeCupcakes('Vanilla', 3)). It's like telling your toy baker \"Please make 3 vanilla cupcakes!\" \ud83e\uddd1\u200d\ud83c\udf73</p> <p>Finally, we check if our pretend friend with the microphone said exactly the right words: \"Baking 3 Vanilla cupcakes\" (expect(console.log).toHaveBeenCalledWith(...)). It's like asking \"Did they say the magic words correctly?\" \u2728</p> <p>So in kid terms:</p> <ul> <li>We have a pretend friend (Jest) \ud83e\udd16</li> <li>We give them a toy microphone (mock console.log) \ud83c\udfa4</li> <li>We ask the baker to make cupcakes \ud83e\uddc1</li> <li>We check if our friend announced it correctly! \u2705</li> </ul> <p>It's just like when you're playing with toys and making sure everyone follows the story correctly. If someone says the wrong words, the test fails - just like if someone didn't follow the rules in a game!</p> <p>Isn't testing fun when you think about it like playing pretend? \ud83c\udf1f</p> <p>Would you like me to explain any other part of testing in a fun way? Maybe we can come up with more cupcake-related testing examples! \ud83c\udf70**</p> <p>Now you\u2019ve got a test\u2014and a better understanding of how to write one.</p>"},{"location":"copilot-enabler/#adding-comments-and-documentation","title":"\ud83c\udf6c Adding Comments and Documentation","text":"<p>Copilot can help you document your code clearly.</p>"},{"location":"copilot-enabler/#example_1","title":"Example:","text":"<pre><code>// Add JSDoc comments to this function\nfunction rateCupcake(flavor, rating) {\n  return `${flavor} gets a ${rating}/5!`;\n}\n</code></pre> <p>Copilot might suggest:</p> <pre><code>/**\n * Rates a cupcake flavor.\n * @param {string} flavor - The flavor of the cupcake.\n * @param {number} rating - The rating from 1 to 5.\n * @returns {string} A formatted rating message.\n */\nfunction rateCupcake(flavor, rating) {\n  return `${flavor} gets a ${rating}/5!`;\n}\n</code></pre> <p>Now your code is easier to read and maintain!</p>"},{"location":"copilot-enabler/#debugging-with-copilot","title":"\u2b50 Debugging with Copilot","text":"<p>Stuck on a bug? Copilot can help you spot the issue.</p>"},{"location":"copilot-enabler/#example_2","title":"Example:","text":"<pre><code>// Why is this function returning undefined?\nfunction getCupcake(flavor) {\n  const cupcakes = { Vanilla: 5, Chocolate: 3 };\n  cupcakes.flavor;\n}\n</code></pre> <p>Copilot might suggest:</p> <pre><code>// You need to use bracket notation to access dynamic keys\nreturn cupcakes[flavor];\n</code></pre> <p>Boom! Bug fixed, lesson learned.</p>"},{"location":"copilot-enabler/#github-copilot-features-whats-hot-whats-dropping","title":"\ud83e\udde0\u26a1 GitHub Copilot Features: What\u2019s Hot &amp; What\u2019s Dropping","text":"<p>Status: \u2705 Completed XP: \ud83d\udcaf 100 Time: \u23f1\ufe0f 6 mins  </p>"},{"location":"copilot-enabler/#copilot-your-ai-coding-sidekick","title":"\ud83d\ude80 Copilot = Your AI Coding Sidekick","text":"<p>GitHub Copilot\u2019s got a growing list of features for solo devs and orgs. Some are \ud83d\udd12 exclusive, others are \ud83d\udd13 public preview. What you get depends on your plan.</p>"},{"location":"copilot-enabler/#core-features-general-availability","title":"\ud83e\udde9 Core Features (General Availability)","text":""},{"location":"copilot-enabler/#code-completion","title":"\u2728 Code Completion","text":"<ul> <li>Autocomplete vibes in VS Code, Visual Studio, JetBrains, Azure Data Studio, Xcode, Vim/Neovim, Eclipse.</li> <li>In VS Code: \u201cNext edit suggestions\u201d predict your next move and help you code faster.</li> </ul>"},{"location":"copilot-enabler/#copilot-chat","title":"\ud83d\udcac Copilot Chat","text":"<ul> <li>Ask coding Qs, update files, get help.</li> <li>Available in GitHub Web, GitHub Mobile, IDEs (VS Code, Visual Studio, JetBrains, Eclipse, Xcode), and Windows Terminal.</li> <li>GitHub Skills in Chat (not in Free plan).</li> </ul>"},{"location":"copilot-enabler/#copilot-edits","title":"\ud83d\udee0\ufe0f Copilot Edits","text":"<p>Edit across files from one chat prompt.</p> <ul> <li>Edit Mode: You control the files, context, and edits.</li> <li>Agent Mode: Copilot takes the wheel, edits code, runs terminal commands, and fixes stuff until the task\u2019s done. (Only in VS Code)</li> </ul>"},{"location":"copilot-enabler/#code-review","title":"\ud83d\udd0d Code Review","text":"<p>AI-powered suggestions to help you write cleaner, smarter code.</p>"},{"location":"copilot-enabler/#copilot-in-the-cli","title":"\ud83e\uddd1\u200d\ud83d\udcbb Copilot in the CLI","text":"<p>Chat with Copilot in your terminal. Ask for command help, get suggestions, and explanations. Works in Windows Terminal Canary too.</p>"},{"location":"copilot-enabler/#pull-request-summaries","title":"\ud83d\udce6 Pull Request Summaries","text":"<p>Copilot auto-generates summaries of PR changes, impacted files, and review tips. (Not in Free plan)</p>"},{"location":"copilot-enabler/#copilot-extensions","title":"\ud83e\uddea Copilot Extensions","text":"<p>Plug external tools into Copilot Chat via GitHub Apps. Build your own or grab from GitHub Marketplace.</p>"},{"location":"copilot-enabler/#custom-instructions","title":"\ud83e\udde0 Custom Instructions","text":"<p>Tell Copilot your coding style, tools, and preferences to get better responses.</p>"},{"location":"copilot-enabler/#knowledge-bases-enterprise-only","title":"\ud83d\udcda Knowledge Bases (Enterprise Only)","text":"<p>Create doc collections to use as context in Copilot Chat. Ask smarter questions in GitHub or VS Code.</p>"},{"location":"copilot-enabler/#tldr","title":"\ud83e\udde0 TL;DR","text":"<p>Copilot\u2019s stacked with features to level up your coding game. From smart suggestions to full-on AI agents, it\u2019s built to boost your dev flow. What you get depends on your plan, but even the basics are \ud83d\udd25.</p>"},{"location":"copilot-enabler/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Copilot is like a cupcake decorator who helps you make your creations shine. It doesn\u2019t bake for you\u2014but it helps you refine, polish, and perfect your code.</p> <p>Use it to: - Improve readability - Learn best practices - Write cleaner code - Build confidence</p> <p>You\u2019re not just coding\u2014you\u2019re crafting something sweet and smart. \ud83c\udf70 Keep experimenting, keep improving, and keep baking brilliance! \ud83e\uddc1</p>"},{"location":"copilot-pair/","title":"\ud83e\udd1d Copilot as a Pair Programmer","text":"<p>Welcome to the coding kitchen! \ud83c\udf73 In this section, we\u2019ll explore how GitHub Copilot can act as your pair programmer\u2014a supportive coding buddy who helps--- - \ud83c\udf88you brainstorm,  - \u2728debug,  - \ud83c\udfb6and build smarter.</p>"},{"location":"copilot-pair/#what-is-pair-programming","title":"\ud83d\udc0d\ud83d\udc9e What is Pair Programming?","text":"<p>Pair programming is a technique where two developers work together:</p> <ul> <li>One writes the code (the driver)</li> <li>One reviews, suggests, and guides (the navigator)</li> </ul> <p>With Copilot, you\u2019re always the driver. Copilot is your navigator\u2014offering ideas, catching mistakes, and helping you stay focused.</p>"},{"location":"copilot-pair/#copilot-is-your-coding-buddy","title":"\ud83d\udc9e Copilot is Your Coding Buddy","text":"<p>Copilot shines when you: - \ud83c\udf89 Know what you want to build - \ud83c\udf80 Break the task into steps - \ud83c\udf1f Use comments to guide its suggestions</p> <p>It\u2019s like baking cupcakes with a friend who hands you the ingredients and reads the recipe aloud\u2014but you still do the mixing and decorating.</p>"},{"location":"copilot-pair/#example-build-a-cupcake-rating-form","title":"\ud83c\udf6c Example: Build a Cupcake Rating Form","text":"<p>Let\u2019s say you want to build a simple form to rate cupcakes. Start with a clear comment:</p> <pre><code>&lt;!-- Create a form to rate cupcakes from 1 to 5 --&gt;\n&lt;form&gt;\n  &lt;label for=\"flavor\"&gt;Cupcake Flavor:&lt;/label&gt;\n  &lt;input type=\"text\" id=\"flavor\" name=\"flavor\" /&gt;\n\n  &lt;label for=\"rating\"&gt;Rating (1-5):&lt;/label&gt;\n  &lt;input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"5\" /&gt;\n\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Now switch to JavaScript and guide Copilot:</p> <pre><code>// Add validation for the rating input\n</code></pre> <p>Copilot will suggest code to check if the rating is between 1 and 5. You can review it, tweak it, and learn from it.</p>"},{"location":"copilot-pair/#example-brainstorming-with-copilot","title":"\ud83c\udf1f\u2728 Example: Brainstorming with Copilot","text":"<p>Let\u2019s say you\u2019re not sure how to store the ratings. Try prompting Copilot:</p> <pre><code>// Store cupcake ratings in an array of objects\n</code></pre> <p>Copilot might suggest:</p> <pre><code>const ratings = [\n  { flavor: \"Vanilla\", rating: 5 },\n  { flavor: \"Chocolate\", rating: 4 }\n];\n</code></pre> <p>You can then ask:</p> <pre><code>// Add a function to calculate the average rating\n</code></pre> <p>This turns Copilot into a collaborator, helping you think through the problem.</p>"},{"location":"copilot-pair/#tips-for-effective-pairing","title":"\ud83c\udf82 Tips for Effective Pairing","text":"<ul> <li>\ud83d\udca1 Be intentional: Use comments to describe what you want.</li> <li>\ud83e\udde0 Stay in control: Don\u2019t accept suggestions blindly\u2014review and refine.</li> <li>\ud83e\uddee Break tasks down: Smaller steps = better suggestions.</li> <li>\ud83d\udc69\u200d\ud83d\udd2c Talk to Copilot: Treat it like a teammate. Ask questions, give feedback.</li> </ul>"},{"location":"copilot-pair/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Pair programming with Copilot is like baking with a buddy who knows every recipe\u2014but still lets you decorate the cupcakes your way. \ud83e\uddc1</p> <p>Use Copilot to: - Spark ideas - Catch bugs - Learn new patterns</p> <p>But always remember: you\u2019re the coder. Copilot is just here to make the journey sweeter. \ud83c\udf6c</p>"},{"location":"copilot-teacher/","title":"\ud83d\udc69\u200d\ud83c\udfeb Copilot as a Teacher","text":"<p>Welcome to the classroom of Code without Barriers   \ud83e\uddd1\u200d\ud83d\udcbb\ud83d\udd25</p> <p>\ud83d\udc69In this section, we\u2019ll explore how GitHub Copilot can be your coding teacher, helping you learn new concepts, understand syntax, and build confidence in your skills.</p>"},{"location":"copilot-teacher/#what-does-it-mean-for-copilot-to-be-a-teacher","title":"\ud83d\udcbb What does it mean for Copilot to be a teacher? \ud83e\uddd1\u200d\ud83d\udd2c","text":"<p>Think of Copilot like a friendly tutor who: - Explains things when you ask - Shows examples when you're stuck - Offers suggestions that help you learn\u2014not skip steps</p> <p>Copilot is great at responding to curiosity. The more questions you ask, the more you learn.</p>"},{"location":"copilot-teacher/#learning-through-comments","title":"\ud83e\uddee Learning Through Comments","text":"<p>One of the best ways to use Copilot as a teacher is by writing comments that ask questions or describe what you want to learn.</p>"},{"location":"copilot-teacher/#example-1-ask-for-an-explanation","title":"Example 1: Ask for an explanation","text":"<pre><code># What does this function do?\ndef bake(cupcakes):\n    return sorted(cupcakes)\n</code></pre> <p>Copilot will often respond with a comment or rewrite that explains the logic.  \ud83d\udc0d</p> <p>You can also ask:</p> <pre><code># Explain recursion with a simple example\n</code></pre> <p>This prompts Copilot to generate a teaching snippet\u2014like a mini tutorial!</p> <p></p> <pre><code>def open_nesting_doll(size):\n    # Base case: smallest doll (stops recursion)\n    if size == 1:\n        print(f\"Found the smallest doll of size {size}!\")\n        return\n\n    # Recursive case: open current doll and look inside\n    print(f\"Opening doll of size {size}\")\n    open_nesting_doll(size - 1)  # Call the same function with a smaller size\n    print(f\"Closing doll of size {size}\")\n\n# Try it with 3 nested dolls\nopen_nesting_doll(3)\n</code></pre> <p>When you run this code, it will output:</p> <pre><code>Opening doll of size 3\nOpening doll of size 2\nFound the smallest doll of size 1!\nClosing doll of size 2\nClosing doll of size 3\n</code></pre> <p> </p> <pre><code>def factorial(n):\n    if n == 0:        # Base case\n        return 1\n    else:             # Recursive case\n        return n * factorial(n-1)\n</code></pre> <p>If we calculate factorial(3), it works like this:</p> <pre><code>factorial(3)\n\u2192 3 * factorial(2)\n  \u2192 2 * factorial(1)\n    \u2192 1 * factorial(0)\n      \u2192 1            # Base case reached\n    \u2192 1 * 1 = 1\n  \u2192 2 * 1 = 2\n\u2192 3 * 2 = 6\n</code></pre>"},{"location":"copilot-teacher/#_1","title":"Copilot as Teacher","text":""},{"location":"copilot-teacher/#learn-concepts-in-context","title":"\ud83c\udf6c Learn Concepts in Context","text":"<p>Use Copilot to explore tricky topics like:</p> <ul> <li> <p>Regular Expressions <code>js   // Show me a regex to validate an email address</code></p> </li> <li> <p>Recursion <code>python   # Explain recursion with a factorial function</code></p> </li> <li> <p>Sorting Algorithms <code>js   // Show me how bubble sort works</code></p> </li> </ul> <p>Copilot will generate code and often include comments that explain each step. You can then tweak the code, run it, and see how it behaves.</p>"},{"location":"copilot-teacher/#ask-why-and-how","title":"\ud83c\udf69 Ask \u201cWhy\u201d and \u201cHow\u201d","text":"<p>Copilot is great at showing how something works\u2014but you can push it further by asking why.</p>"},{"location":"copilot-teacher/#example","title":"Example:","text":"<pre><code>// Why is this function using map instead of forEach?\n</code></pre> <p>This encourages Copilot to explain the difference, helping you understand intent and design choices.</p>"},{"location":"copilot-teacher/#practice-with-mini-challenges","title":"\ud83d\udc0d Practice with Mini Challenges","text":"<p>Try giving Copilot a challenge and see how it responds. Then review and improve the code.</p>"},{"location":"copilot-teacher/#example_1","title":"Example:","text":"<pre><code># Write a function that counts how many cupcakes have sprinkles\n</code></pre> <p>Copilot will generate a function. You can: - Add edge cases - Write tests - Refactor it - Ask Copilot to explain each line</p> <p>This turns Copilot into a learning loop\u2014you ask, it answers, you improve.</p>"},{"location":"copilot-teacher/#cupcake-coding-tips-for-learning","title":"\ud83c\udf82 Cupcake Coding Tips for Learning","text":"<ul> <li>\ud83d\udc69\u200d\ud83d\udd2c Be specific: Ask clear questions in comments or chat.</li> <li>\u2728 Review suggestions: Don\u2019t just accept\u2014read and understand.</li> <li>\ud83d\udcbb Tweak examples: Change inputs, add conditions, break things!</li> <li>\ud83e\uddee Ask for alternatives: \u201cShow me another way to do this.\u201d</li> <li>\ud83c\udf6d TLDR: \"Explain it to me like I'm 5\"</li> <li>\ud83d\udc9e Add Notes: \"Add verbose comments to the code\"</li> </ul>"},{"location":"copilot-teacher/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Copilot is more than a code generator\u2014it\u2019s a learning partner. Use it to explore, experiment, and expand your coding skills.</p> <p>You\u2019re not just baking cupcakes\u2014you\u2019re mastering the recipe! \ud83e\uddc1 Keep asking questions, keep growing, and keep coding with curiosity. \ud83c\udf1f</p>"},{"location":"mindset/","title":"\ud83e\udde0 The Mindset Shift","text":"<p>Welcome to the most important ingredient in your Code without Barriers journey: your mindset! \ud83e\udde0\ud83d\udca1</p> <p>GitHub Copilot is a powerful tool but like any good kitchen assistant, it works best when you\u2019re in charge. This section is all about helping you shift from passive coding to active learning.</p>"},{"location":"mindset/#copilot-is-not-your-baker","title":"\ud83c\udf69 Copilot is NOT your baker","text":"<p>Let\u2019s get this straight:</p> <p>\u274c Copilot is not here to bake the cupcakes for you. \u2705 Copilot is here to help you bake better cupcakes.</p> <p>Think of it like this: - You bring the creativity, curiosity, and control. - Copilot brings suggestions, explanations, and shortcuts.</p>"},{"location":"mindset/#what-is-vibe-coding-and-why-avoid-it","title":"\ud83e\uddee What is \u201cVibe Coding\u201d? And why avoid it?","text":"<p>Vibe Coding is when you let Copilot write code without understanding it. You vibe with the suggestions, accept them blindly, and hope for the best.</p> <p>\ud83d\udeab This leads to: - Code you can\u2019t debug - Features you can\u2019t explain - Skills you don\u2019t develop</p> <p>Instead, we want to learn actively.</p>"},{"location":"mindset/#examples-of-healthy-copilot-use","title":"\ud83c\udf1f Examples of Healthy Copilot Use","text":""},{"location":"mindset/#1-ask-github-copilot-the-2-million-questions-youd-like-to-ask-your-senior-dev-but-are-afraid-to-ask-because-you-dont-want-to-be-seen-asking-dumb-questions","title":"1. Ask GitHub Copilot the 2 million questions you'd like to ask your Senior Dev but are afraid to ask because you don't want to be seen asking dumb questions.","text":"<p>[\ud83d\udc69\u200d\ud83d\udcbb\ud83d\udca5hot take: There are no dumb questions].</p> <p>Here are some examples but you can ask as many as you like GitHub Copilot will never judge you or get tired*:</p> <p>\"Can you walk me through how this code works?\" Helps build a deeper understanding of logic, structure, and flow.</p> <p>\"What\u2019s the best way to structure this function or component?\" Encourages clean, maintainable, and scalable code practices.</p> <p>\"How do I know if this code is efficient?\" Promotes awareness of performance, complexity, and optimization.</p> <p>\"Is there a more idiomatic way to write this in [language]?\" Helps learn language-specific best practices and conventions.</p> <p>\"How should I write a test for this code?\" Builds good habits around testing and quality assurance.</p> <p>\"How do I debug this issue effectively?\" Encourages learning tools and techniques for troubleshooting.</p> <p>\"What\u2019s the difference between this approach and that one?\" Fosters critical thinking and comparison of coding strategies.</p> <p>\"How do I handle errors or edge cases in this code?\" Promotes robust and resilient coding practices.</p> <p>\"Can you review my code and suggest improvements?\" GitHub Copilot can do this in the IDE, Codespace or from a Pull Request.</p> <p>\"How do I write code that\u2019s easy for others to understand?\" Encourages readability, documentation, and team collaboration.</p> <p>*If GitHub Copilot \ud83e\uddd1\u200d\ud83d\udcbb runs out of tokens \ud83e\ude99 because you are using the free version, switch to another model \ud83e\udd16 from the list and keep asking questions \u2753. It's not tired of you \ud83d\ude34, it's hungry \ud83d\ude0b.</p>"},{"location":"mindset/#2-questions-you-might-save-for-your-senior-dev","title":"2. Questions you might save for your senior Dev","text":"<p>\ud83e\udde0 Learning &amp; Growth</p> <p>\"Can you explain why we\u2019re doing it this way?\" Helps understand the reasoning behind decisions and best practices. GitHub Copilot Enterprise would have the context of your organisations codebase and all their repositories (apart from those excluded), so it would be able to answer this, if the orgs docs are good and the code practices are consistent. But it's always good to get the perspective of your Senior Dev.</p> <p>\"What should I focus on learning next?\" Guides your learning path based on team needs and your current level. This will tell you either what your Senior Dev thinks is most important, or what they think you do not know.</p> <p>\"How do I know if I\u2019m writing good code?\" Encourages feedback on code quality, readability, and maintainability. GitHub Copilot will explain this to you really well, but it's good to know what your Senior Dev values and how they score code according to those metrics.</p> <p>\ud83d\udee0\ufe0f Technical &amp; Workflow </p> <p>\"What\u2019s the best way to debug this?\" Builds problem-solving skills and introduces tools or techniques. You can ask GitHub Copilot this first, get it's understanding and explanations. I spoke to a Senior Dev today that told me GitHub Copilot showed him a better way to Test something and explained why his way was not as good.</p> <p>\"How does this part of the system work?\" Deepens understanding of the codebase and architecture. GitHub Copilot can also explain this to you, but it would be useful to understand the code as your Senior Dev see's it. I think you should ask GitHub Copilot first - and then go to your Senior Dev when you mostly understand it and want their spin on it.</p> <p>\"What\u2019s the process for reviewing and merging code?\" Clarifies team workflows and expectations for collaboration.</p> <p>\ud83e\udd1d Team &amp; Communication</p> <p>\"Who should I ask when I\u2019m stuck?\" Helps avoid spinning wheels and encourages collaboration. Hopefully your Senior Dev will encourage you to come to them for help when you need to</p> <p>\"How can I contribute more effectively to the team?\" Shows initiative and willingness to grow beyond assigned tasks.</p> <p>\u2705 Feedback &amp; Improvement</p> <p>\"Can you review my code and give me feedback?\" Opens the door to mentorship and continuous improvement. But actually you could ask GitHub Copilot to Review your Code in the IDE and Codespace or from the Pull Request.</p> <p>\"What mistakes should I watch out for?\" Helps avoid common pitfalls and learn from others\u2019 experience.</p>"},{"location":"mindset/#3-ask-github-copilot-to-explain-code","title":"3. Ask GitHub Copilot to explain code \ud83d\udc0d","text":"<pre><code># What does this function do?\ndef bake(cupcakes):\n    return sorted(cupcakes)\n</code></pre>"},{"location":"mindset/#4-ask-github-copilot-to-explain-it-to-you-like-you-are-5-years-old","title":"4. Ask GitHub Copilot to explain it to you like you are 5 years old","text":""},{"location":"mindset/#5-ask-github-copilot-to-show-you-5-different-ways-to-solve-the-problem","title":"5. Ask GitHub Copilot to show you 5 different ways to solve the problem","text":"<pre><code># Method 1: Using Python's built-in sorted() function\ndef sort_cupcakes_builtin(cupcakes):\n    return sorted(cupcakes)\n\n# Method 2: Using bubble sort implementation\ndef sort_cupcakes_bubble(cupcakes):\n    cupcakes = cupcakes.copy()  # Make a copy to avoid modifying original\n    n = len(cupcakes)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if cupcakes[j] &gt; cupcakes[j + 1]:\n                cupcakes[j], cupcakes[j + 1] = cupcakes[j + 1], cupcakes[j]\n    return cupcakes\n\n# Method 3: Using list.sort() method\ndef sort_cupcakes_list(cupcakes):\n    result = cupcakes.copy()  # Make a copy to avoid modifying original\n    result.sort()\n    return result\n\n# Method 4: Using sorted() with a key function for case-insensitive sorting\ndef sort_cupcakes_insensitive(cupcakes):\n    return sorted(cupcakes, key=str.lower)\n\n# Method 5: Using sorted() with reverse order (descending)\ndef sort_cupcakes_reverse(cupcakes):\n    return sorted(cupcakes, reverse=True)\n\n# Test all implementations\nif __name__ == \"__main__\":\n    test_cupcakes = [\"Vanilla\", \"chocolate\", \"Strawberry\", \"banana\"]\n    print(\"Sorting cupcake flavors:\")\n    print(f\"1. Built-in sorted(): {sort_cupcakes_builtin(test_cupcakes)}\")\n    print(f\"2. Bubble sort: {sort_cupcakes_bubble(test_cupcakes)}\")\n    print(f\"3. List sort method: {sort_cupcakes_list(test_cupcakes)}\")\n    print(f\"4. Case-insensitive: {sort_cupcakes_insensitive(test_cupcakes)}\")\n    print(f\"5. Reverse order: {sort_cupcakes_reverse(test_cupcakes)}\")\n</code></pre>"},{"location":"mindset/#demo-5-ways-to-write-this-function","title":"Demo: 5 Ways to write this function","text":"Your browser does not support the video tag."},{"location":"welcome/","title":"\ud83d\udcbb\ud83d\udc9e Welcome!","text":"<p>Thanks for joining Code without Barriers for this deliciously fun workshop! Today, we'll explore how to use GitHub Copilot to become a better coder\u2014not a lazier one.</p> <p>\"Copilot is your sous-chef, not your baker.\" \ud83d\udc69\u200d\ud83c\udf73</p>    Your browser does not support the video tag.  <p>Video created with sora in Azure AI Foundry Video Playground</p>"},{"location":"wrapup/","title":"\ud83c\udf89 Wrap-Up &amp; Resources","text":"<p>You did it! \ud83d\udc9e</p>"},{"location":"wrapup/#key-takeaways","title":"Key Takeaways:","text":"<ul> <li>You\u2019re the baker. Copilot is your sous-chef.</li> <li>Use it to learn, not to cheat.</li> <li>Ask questions. Stay curious.</li> </ul>"},{"location":"wrapup/#resources","title":"Resources:","text":"<ul> <li>GitHub Copilot Docs</li> <li>GitHub Copilot Fundamentals</li> <li>GitHub Copilot Certification</li> <li>Code without Barriers</li> </ul>"}]}